|----------------------------------------------------------------------------------------------------------------------------------------------|
|-------------------------------------------------- REACT NATIVE PASO A PASO ------------------------------------------------------------------|
|----------------------------------------------------------------------------------------------------------------------------------------------|
|-- Bibliografía xxxxxxxxxxxxxxxxxxxxxxxxxxxxx ------------------------------------------------------------------------------------------------|
|----------------------------------------------------------------------------------------------------------------------------------------------|

|----------------------------------------------------------------------------------------------------------------------------------------------|
|-- 01. Configurar el Entorno de Desarrollo ---------------------------------------------------------------------------------------------------|
|----------------------------------------------------------------------------------------------------------------------------------------------|

--- 01.01. Instalar Visual Studio Code -> https://code.visualstudio.com/download y en el asistente de instalación dejar marcada la opción.
           “Agregar PATH…”
--- 01.02. Instalar las siguientes extensiones en Visual Studio Code:

           ES7 React/Redux/React-Native snippets
           Simple React Snippets
           Auto Close Tag
           Paste JSON as Code
           TypeScript importer

--- 01.03. Instalar node.js -> https://nodejs.org/es/. Descargar la última versión LTS.
--- 01.04. Crear una carpeta raíz para los proyectos en el computador -> 'Escritorio/react_native'
--- 01.05. Abrir con 'Visual Studio Code' la carpeta creada, es decir,'react_native'
--- 01.06. Abrir una nueva terminal en vs code -> 'Terminal / New Terminal' ó 'Ctrl + Shift + ñ'
--- 01.07. Verificar versión de node.js en la terminal:

           PS C:\Users\Aprendiz\Desktop\react_native> node --version

--- 01.08. Instalar Android Studio -> https://developer.android.com/studio?hl=es-419. Seleccionarla opción
           'android-studio-2024.2.2.13-windows.exe'. Dejar habilitado 'Android Virtual Device'

--- 01.09. Configurar las variables de entorno creando las rutas de acceso para el SDK de Java y Android SDK:

           01. Buscar en el menú Windows 'Editar las variables de entorno del sistema'
           02. Dar clic en 'Variables de entorno…'
           03. En las 'Variables de usuario' dar clic en 'Nueva...'
               
               Nombre de la variable: JAVA_HOME
               Valor de la variable:  'Examinar Directorio': C:\Program Files\Android\Android Studio\jbr\bin
               
               Nombre de la variable: ANDROID_HOME
               Valor de la variable:  'Examinar Directorio': C:\Users\ADMIN\AppData\Local\Android\Sdk

--- 01.10. Instalar Postman https://www.postman.com/downloads/ (opcional) para realizar peticiones HTTP.
--- 01.11. Crear el Emulador:

           01. Abrir Android Studio
           02. Seleccionar 'More Actions / Virtual Device Manager'
           03. Seleccionar la opción '(+) Create Virtual Device' y buscar un emulador que tenga los servicios de Google Service para probar 
               las aplicaciones sin restricciones (icono de Play Store), por ejemplo, 'Pixel 4'
           04. Dar clic a 'Next' / descargar una versión, por ejemplo, 'Tiramisu'. Dar clic en el botón de descarga para obtener 
               la API correspondiente
           05. Dar clic a 'Finish' / 'Next' / 'Finish', para dejar las opciones por defecto

--- 01.12. Ejecutar el Emulador dando clic en la punta de flecha (columna 'Actions', la primera vez demorará más tiempo)


|----------------------------------------------------------------------------------------------------------------------------------------------|
|-------------------------------------------------------- ¡ AQUÍ VOY ! ------------------------------------------------------------------------|
|----------------------------------------------------------------------------------------------------------------------------------------------|


--- 01.04. Abrir el 'PowerShell' como 'administrador' y escribir los siguientes comandos:

           PS C:\Windows\system32> Get-ExecutionPolicy
           PS C:\Windows\system32> Set-ExecutionPolicy Unrestricted

           Cambio de directiva de ejecución
           La directiva de ejecución te ayuda a protegerte de scripts en los que no confías.
           Si cambias dicha directiva, podrías exponerte a los riesgos de seguridad descritos
           en el tema de la Ayuda about_Execution_Policies en
           https:/go.microsoft.com/fwlink/?LinkID=135170.
           ¿Quieres cambiar la directiva de ejecución?
           [S] Sí  [O] Sí a todo  [N] No  [T] No a todo  [U] Suspender  [?] Ayuda
           (el valor predeterminado es "N"): S

--- 01.05. Crear una carpeta raíz para los proyectos en el computador -> 'Escritorio/angular'
--- 01.06. Abrir con 'Visual Studio Code' la carpeta creada, es decir,'angular'

--- 01.08. Instalar Angular escribiendo en la terminal:

           PS C:\Users\ADMIN\Desktop\angular> npm install -g @angular/cli

--- 01.09. Verificar las versiones de node.js y angular en la terminal:

           PS C:\Users\ADMIN\Desktop\angular> node --version
           PS C:\Users\ADMIN\Desktop\angular> ng version

--- 01.10. Crear un nuevo proyecto de Angular desde la terminal:

           PS C:\Users\ADMIN\Desktop\angular> ng new app01

--- 01.11. Seleccionar:

           ❯ CSS             [ https://developer.mozilla.org/docs/Web/CSS                     ]
           ? Do you want to enable Server-Side Rendering (SSR) and Static Site Generation (SSG/Prerendering)? (y/N) n

--- 01.12. Ingresar a la carpeta 'app01' desde la terminal:

           PS C:\Users\ADMIN\Desktop\angular> cd app01

--- 01.13. Ejecturar el Servidor en la terminal:

           PS C:\Users\ADMIN\Desktop\angular\app01> ng serve -o

           Would you like to share pseudonymous usage data about this project with the Angular Team
           at Google under Google's Privacy Policy at https://policies.google.com/privacy. For more
           details and how to change this setting, see https://angular.dev/cli/analytics.

               (y/N) y

           Watch mode enabled. Watching for file changes...
           NOTE: Raw file sizes do not reflect development server per-request transformations.
           ➜  Local:   http://localhost:4200/
           ➜  press h + enter to show help

--- 01.14. Modificar código del archivo 'app01/src/app/app.component.ts', en línea 11:

           11.  title:number = 35;


|----------------------------------------------------------------------------------------------------------------------------------------------|
|-- 02. Componentes ---------------------------------------------------------------------------------------------------------------------------|
|----------------------------------------------------------------------------------------------------------------------------------------------|

--- 02.01. Abrir una nueva terminal para ejecutar más comandos -> 'Terminal / New Terminal' ó 'Ctrl + Shift + ñ'
--- 02.02. Ingresar nuevamente a la carpeta 'app01', desde la terminal:

           PS C:\Users\ADMIN\Desktop\angular> cd app01

--- 02.03. Crear un componente desde la terminal:

           PS C:\Users\ADMIN\Desktop\angular\app01> ng generate component components/home

--- 02.04. Modificar código del archivo 'app01/src/app/app.component.html', eliminando líneas de código y quedando así:

            1.  <main class="main">
            2.
            3.  </main>
            4.
            5.  <router-outlet />

--- 02.05. Seguir modificando el código del archivo 'app01/src/app/app.component.html', creando las siguientes líneas de código:

            1.  <main class="main">
            2.    <header class="brand-home">
            3.      <img class="brand-logo" src="" alt="logo" />
            4.    </header>
            5.    <section class="content">
            6.
            7.    </section>
            8.  </main>
            9.
           10.  <router-outlet />

--- 02.06. Crear la carpeta 'assets' en la carpeta 'public'
--- 02.07. En la carpeta 'app01/public/assets', cargar la siguiente imagen:

           https://github.com/ProfeAlbeiro/angular/blob/main/app01/public/assets/logo.svg

--- 02.08. Seguir modificando el código del archivo 'app01/src/app/app.component.html', en la línea 3 y 6:

            3.      <img class="brand-logo" src="assets/logo.svg" alt="logo" />
            6.      <app-home></app-home>

--- 02.09. Modificar código del archivo 'app01/src/app/app.component.ts', para agregar el nuevo componente, línea 6:

            1.      imports: [RouterOutlet, HomeComponent],

--- 02.10. Seguir modificando el código del archivo 'app01/src/app/app.component.ts' en la línea 6, para importar el componente
           creado, presionando 'Ctrl + Space' al final de 'HomeComponent' y seleccionando el mismo nombre, quedando así:

            1.  import { Component } from '@angular/core';
            2.  import { RouterOutlet } from '@angular/router';
            3.  import { HomeComponent } from './components/home/home.component';
            4.
            5.  @Component({
            6.    selector: 'app-root',
            7.    imports: [RouterOutlet, HomeComponent],
            8.    templateUrl: './app.component.html',
            9.    styleUrl: './app.component.css'
           10.  })
           11.  export class AppComponent {
           12.    title:number = 35;
           13.  }

--- 02.11. Modificar código del archivo 'app01/src/app/components/home/home.component.html', de la siguiente forma:

            1.  <section>
            2.    <form>
            3.      <input type="text" placeholder="Filter by city" />
            4.      <button class="primary" type="button">Search</button>
            5.    </form>
            6.    <section class="results">
            7.
            8.    </section>
            9.  <section>

--- 02.12. Agregar estilos al archivo 'app01/src/app/components/home/home.component.css', desde el siguiente enlace:

           https://github.com/ProfeAlbeiro/angular/blob/main/app01/src/app/components/home/home.component.css

--- 02.13. Agregar los estilos globales al archivo 'app01/src/styles.css', desde el siguiente enlace:

           https://github.com/ProfeAlbeiro/angular/blob/main/app01/src/styles.css

--- 02.14. Crear un nuevo componente denominado 'housingLocation' desde la terminal:

           PS C:\Users\ADMIN\Desktop\angular\app01> ng g c components/housingLocation

--- 02.15. Agregar código al archivo 'app01/src/app/components/home/home.component.html' en la línea 7, quedando así:

            1.  <section>
            2.    <form>
            3.      <input type="text" placeholder="Filter by city" />
            4.      <button class="primary" type="button">Search</button>
            5.    </form>
            6.    <section class="results">
            7.      <app-housing-location></app-housing-location>
            8.    </section>
            9.  <section>

--- 02.16. Modificar código del archivo 'app01/src/app/components/home/home.component.ts', quedando así:

            1.  import { Component } from '@angular/core';
            2.  import { HousingLocationComponent } from '../housing-location/housing-location.component';
            3.
            4.  @Component({
            5.    selector: 'app-home',
            6.    imports: [HousingLocationComponent],
            7.    templateUrl: './home.component.html',
            8.    styleUrl: './home.component.css'
            9.  })
           10.  export class HomeComponent {
           11.
           12.  }

--- 02.17. Agregar estilos al archivo 'app01/src/app/components/housing-location/housing-location.component.css', desde el siguiente enlace:

           https://github.com/ProfeAlbeiro/angular/blob/main/app01/src/app/components/housing-location/housing-location.component.css

--- 02.18. En la carpeta 'app01/public/assets', cargar la siguiente imagen:

           https://github.com/ProfeAlbeiro/angular/blob/main/app01/public/assets/location-pin.svg


|----------------------------------------------------------------------------------------------------------------------------------------------|
|-- 03. Interfaces ----------------------------------------------------------------------------------------------------------------------------|
|----------------------------------------------------------------------------------------------------------------------------------------------|

--- 03.01. Crear una interface desde la terminal:

           PS C:\Users\ADMIN\Desktop\angular\app01> ng generate interface components/housinglocation

--- 03.02. Modificar código del archivo 'app01/src/app/components/housinglocation.ts' para definir propiedades, quedando así:

            1.  export interface Housinglocation {
            2.      id: number;
            3.      name: string;
            4.      city: string;
            5.      state: string;
            6.      photo: string;
            7.      availableUnits: number;
            8.      wifi:boolean;
            9.      laundry:boolean;
           10.  }

--- 03.03. Modificar código del archivo 'app01/src/app/components/home/home.component.ts' para crear una instancia de la interfaz,
           quedando así:

            1.  import { Component } from '@angular/core';
            2.  import { HousingLocationComponent } from '../housing-location/housing-location.component';
            3.  import { Housinglocation } from '../housinglocation';
            4.
            5.  @Component({
            6.    selector: 'app-home',
            7.    imports: [HousingLocationComponent],
            8.    templateUrl: './home.component.html',
            9.    styleUrl: './home.component.css'
           10.  })
           11.  export class HomeComponent {
           12.    readonly baseUrl = 'https://angular.dev/assets/images/tutorials/common';
           13.    housinglocation: Housinglocation = {
           14.      id: 999,
           15.      name: 'Test Home',
           16.      city: 'Test City',
           17.      state: 'ST',
           18.      photo: `${this.baseUrl}/example-house.jpg`,
           19.      availableUnits: 99,
           20.      wifi: true,
           21.      laundry: false
           22.    };
           23.  }

--- 03.04. Modificar código del archivo 'app01/src/app/components/housing-location/housing-location.component.ts' para agregar un
           decorador (@), quedando así:
            1.  import { Component, Input } from '@angular/core';
            2.  import { Housinglocation } from '../housinglocation';
            3.  @Component({
            4.    selector: 'app-housing-location',
            5.    imports: [],
            6.    templateUrl: './housing-location.component.html',
            7.    styleUrl: './housing-location.component.css'
            8.  })
            9.  export class HousingLocationComponent {
           10.    @Input() housingLocation!: Housinglocation;
           11.  }